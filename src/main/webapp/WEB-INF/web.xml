<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- Web Service listener -->
	<listener>
		<listener-class>com.sun.xml.ws.transport.http.servlet.WSServletContextListener</listener-class>
	</listener>

	<!-- Apache Tiles listener (UI templating) -->
	<listener>
		<listener-class>org.apache.struts2.tiles.StrutsTilesListener</listener-class>
	</listener>

	<!-- EntityManagerFactory listener -->
	<listener>
		<listener-class>com.force.aus.outboundMessage.listeners.EMFListener</listener-class>
	</listener>
	<!-- Struts filter (MVC) -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/app/*</url-pattern>
	</filter-mapping>

	<!-- Filter for capturing XML off the wire for OBM -->
	<filter>
		<filter-name>xmlFilter</filter-name>
		<filter-class>com.force.aus.outboundMessage.filters.WebServiceFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>xmlFilter</filter-name>
		<url-pattern>/OutboundMsgService</url-pattern>
	</filter-mapping>
	<!-- JaxWS -->
	<servlet>
		<servlet-name>jaxws-servlet</servlet-name>
		<servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>jaxws-servlet</servlet-name>
		<url-pattern>/OutboundMsgService</url-pattern>
	</servlet-mapping>

	<!-- Datasource (used in persistence.xml) -->
	<resource-ref>
		<res-ref-name>jdbc/obmDS</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
		<res-sharing-scope>Shareable</res-sharing-scope>
	</resource-ref>

</web-app>
